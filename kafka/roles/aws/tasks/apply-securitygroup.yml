# (c) 2016 DataNexus Inc.  All Rights Reserved.
#
# apply AWS confluent platform security group rules for multi-interface systems
---
- name: ENCRYPTION OVERLAY (AWS) | discovering kafka broker instances
  ec2_instance_facts:
    region: "{{ region }}"
    filters:
      instance-state-name: running
      "tag:Tenant": "{{ tenant }}"
      "tag:Project": "{{ project }}"
      "tag:Domain": "{{ domain }}" 
      "tag:Application": 'kafka_broker'
      "tag:Cluster": "{{ cluster | default ('a') }}"
      "tag:Dataflow": "{{ dataflow | default ('none') }}"
  register: all_kafka_nodes
  when:
    - cloud == 'aws'
    - "'kafka_broker' in groups | default([])"

- block:

  # construct list of all interfaces attached to confluent nodes
  - set_fact:
      kafka_interfaces: "{{ all_kafka_nodes.instances | map(attribute='network_interfaces') | list }}"
  
  # apply confluent rule and the internal SSH rule 
  - name: ENCRYPTION OVERLAY (AWS) | applying kafka broker external security rules to interface 1
    ec2_eni:
      region: "{{ region }}"
      eni_id: "{{ item.network_interface_id }}"
      security_groups:
        - "{{ sg_kafka_external.group_id }}"
    with_items: "{{ kafka_interfaces }}"
    when: item.attachment.device_index == 1
  
  when:
    - "'kafka_broker' in groups | default([])"
    - groups.kafka_broker | length > 0
