# (c) 2016 DataNexus Inc.  All Rights Reserved.
# Licensed software not for distribution
#
# enable broker encryption
---
- import_tasks: interface-facts.yml

- block:
  
  - name: ENCRYPTION OVERLAY (BROKERS) | checking existing server keystore
    stat:
      path: "/etc/tls/{{ tenant }}/{{ broker.application }}"
    register: kafka_server_key
  
  - name: ENCRYPTION OVERLAY (BROKERS) | ensure TLS kafka directory is present
    file:
      path: /etc/tls/{{ tenant }}/{{ broker.application }}
      state: directory
      mode: 0755
      owner: "{{ broker.user }}"
      group: "{{ broker.group }}"
    when: not kafka_server_key.stat.exists

  - name: ENCRYPTION OVERLAY (BROKERS) | distributing certificates to all cluster nodes
    copy:
      src: "{{ item }}"
      dest: "/etc/tls/{{ tenant }}/{{ broker.application }}/"
      owner: "{{ broker.user }}"
      group: "{{ broker.group }}"
      mode: 0600
    with_items:
      - "{{ key_path }}/kafka.server.keystore.jks"
      - "{{ key_path }}/kafka.server.truststore.jks"
    notify: restart broker
  
  - name: ENCRYPTION OVERLAY (BROKERS) | configuring SSL listeners
    replace:
      path: "{{ broker.config_file }}"
      regexp: '^listeners=PLAINTEXT://{{ kafka_interface_ipv4 }}:{{ broker.config.port }}$'
      replace: "listeners=SSL://{{ kafka_interface_ipv4 }}:{{ broker.config.sslPort }}"
    notify: restart broker

  - name: ENCRYPTION OVERLAY (BROKERS) | defaulting advertised listens to SSL
    replace:
      path: "{{ broker.config_file }}"
      regexp: '^advertised.listeners=PLAINTEXT://{{ kafka_interface_ipv4 }}:{{ broker.config.port }}$'
      replace: "advertised.listeners=SSL://{{ kafka_interface_ipv4 }}:{{ broker.config.sslPort }}"
    notify: restart broker
    
  - name: ENCRYPTION OVERLAY (BROKERS) | enabling SSL for internode communication
    blockinfile:
      path: "{{ broker.config_file }}"
      marker: "# {{ broker.application }} SSL {mark} ANSIBLE MANAGED BLOCK"
      insertafter: EOF
      state: present
      block: |
        security.inter.broker.protocol=SSL
        ssl.protocol=TLSv1
        ssl.client.auth=required
        ssl.keystore.location=/etc/tls/{{ tenant }}/{{ broker.application }}/kafka.server.keystore.jks
        ssl.keystore.password={{ storepass }}
        ssl.key.password={{ keypass }}
        ssl.truststore.location=/etc/tls/{{ tenant }}/{{ broker.application }}/kafka.server.truststore.jks
        ssl.truststore.password={{ storepass }}
        ssl.enabled.protocols=TLSv1.2,TLSv1.1,TLSv1
        ssl.keystore.type=JKS
    notify: restart broker

  # cap number of brokers in config at 5
  - name: ENCRYPTION OVERLAY (BROKERS) | updating control center metrics bootstrap servers for {{ broker.service_name }}
    lineinfile:
      path: "{{ broker.config_file }}"
      regexp: '^confluent.metrics.reporter.bootstrap.servers='
      line: "confluent.metrics.reporter.bootstrap.servers={{ groups['kafka_public'][:5] | join(':' + broker.config.sslPort + ',') }}:{{ broker.config.sslPort }}"
      insertafter: '^#confluent.metrics.reporter.bootstrap.servers='
    when:
      - groups['controlcenter'] is defined
      - groups['controlcenter'] | length > 0
    notify: restart broker
    
  - name: ENCRYPTION OVERLAY (BROKERS) | configuring SSL for metrics reporting
    blockinfile:
      path: "{{ broker.config_file }}"
      marker: "# metrics SSL {mark} ANSIBLE MANAGED BLOCK"
      insertafter: EOF
      state: present
      block: |
        confluent.metrics.reporter.security.protocol=SSL
        confluent.metrics.reporter.ssl.truststore.location=/etc/tls/{{ tenant }}/{{ broker.application }}/kafka.server.truststore.jks
        confluent.metrics.reporter.ssl.truststore.password={{ storepass }}
        confluent.metrics.reporter.ssl.keystore.location=/etc/tls/{{ tenant }}/{{ broker.application }}/kafka.server.keystore.jks
        confluent.metrics.reporter.ssl.keystore.password={{ storepass }}
        confluent.metrics.reporter.ssl.key.password={{ keypass }}
    when:
      - groups['controlcenter'] is defined
      - groups['controlcenter'] | length > 0
    notify: restart broker
  
  become: true
