#!/usr/bin/env ansible-playbook
# (c) 2016 DataNexus Inc.  All Rights Reserved.
# Licensed software not for distribution
#
# overlay broker-to-broker, client-to-broker encryption over top of an existing kafka cluster
# https://www.confluent.io/blog/apache-kafka-security-authorization-authentication-encryption/
---
- name: ENCRYPTION OVERLAY (TELEGRAF) | discovering all kafka broker nodes
  hosts: localhost
  vars_files:
    - roles/encryption/defaults/main.yml
  tasks:
    - ec2_instance_facts:
        region: "{{ region }}"
        filters:
          instance-state-name: running
          "tag:Application": kafka_broker
          "tag:Domain": "{{ domain }}"
          "tag:Project": "{{ project }}"
          "tag:Tenant": "{{ tenant }}"
      register: kafka_instances
      when:
        - groups['kafka_broker'] is not defined
        - cloud == 'aws'
    
    - name: ENCRYPTION OVERLAY (TELEGRAF) | building kafka broker host group
      add_host: hostname="{{ item }}" groupname=kafka_broker ansible_ssh_private_key_file="{{ key_path }}/{{ cloud }}-{{ region }}-{{ project }}-{{ broker.application }}-{{ domain }}-private-key.pem"
      with_items: "{{ kafka_instances.instances|map(attribute='private_ip_address')|list }}"
      when:
        - kafka_instances.instances is defined
        - kafka_instances.instances | length > 0

# this is necessary before we build host groups from the ansible server
- name: ENCRYPTION OVERLAY (TELEGRAF) | discovering kafka broker facts
  hosts: kafka_broker
  tasks:
    - setup:
      
- name: ENCRYPTION OVERLAY (TELEGRAF) | building kafka broker public internal host group
  hosts: localhost
  vars_files:
    - roles/encryption/defaults/main.yml
  gather_facts: no
  tasks:
    - name: ENCRYPTION OVERLAY | building kafka broker public internal host group
      add_host: hostname="{{ hostvars[item].ansible_eth1.ipv4.address }}" groupname=kafka_public
      with_items: "{{ groups['kafka_broker'] }}"
      when: "'kafka_broker' in groups | default([])"

# once the brokers are done we can reconfigure all telegraf clients   
- name: ENCRYPTION OVERLAY (TELEGRAF) | configuring telegraf encryption
  hosts: all:!controlcenter_broker:!all_brokers:!kafka_public
  vars_files:
    - roles/encryption/defaults/main.yml
    - "{{ tenant_config_path }}/config/site.yml"
    - "{{ tenant_config_path }}/config/applications/shaw.yml"
    - "{{ tenant_config_path }}/config/applications/telegraf.yml"
  vars:
    # this is semi clever; application gets set based on each host group
    application: "{{ group_names | first }}"
  gather_facts: yes
  tasks:
    - include_role:
        name: encryption
        tasks_from: encrypt-telegraf
      when: telegraf.enabled

- name: ENCRYPTION OVERLAY (TELEGRAF) | removing locally downloaded files
  hosts: localhost
  vars_files:
    - "{{ tenant_config_path }}/config/site.yml"
  tasks:
    - name: ENCRYPTION OVERLAY (TELEGRAF) | removing local stores
      file:
        path: "{{ key_path }}/{{ item }}"
        state: absent
      with_items:
        - ca-key
        - ca-cert
      when: cleanup
